{"metadata":{"category":"SwiftUI Theming","title":"Create your first theme","role":"project","categoryPathComponent":"MeetSwiftUITheming"},"kind":"project","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/dev.alexanderweiss.swiftui_theming\/tutorials\/swiftui-theming\/01-01-CreatingThemes"},"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/tutorials\/swiftui-theming\/01-01-creatingthemes"]}],"hierarchy":{"paths":[["doc:\/\/dev.alexanderweiss.swiftui_theming\/tutorials\/MeetSwiftUITheming","doc:\/\/dev.alexanderweiss.swiftui_theming\/tutorials\/MeetSwiftUITheming\/$volume","doc:\/\/dev.alexanderweiss.swiftui_theming\/tutorials\/MeetSwiftUITheming\/Essentials"]],"reference":"doc:\/\/dev.alexanderweiss.swiftui_theming\/tutorials\/MeetSwiftUITheming","modules":[{"reference":"doc:\/\/dev.alexanderweiss.swiftui_theming\/tutorials\/MeetSwiftUITheming\/Essentials","projects":[{"reference":"doc:\/\/dev.alexanderweiss.swiftui_theming\/tutorials\/swiftui-theming\/01-01-CreatingThemes","sections":[{"kind":"task","reference":"doc:\/\/dev.alexanderweiss.swiftui_theming\/tutorials\/swiftui-theming\/01-01-CreatingThemes#Create-a-theme"}]},{"sections":[{"reference":"doc:\/\/dev.alexanderweiss.swiftui_theming\/tutorials\/swiftui-theming\/01-02-EnableTheming#Add-the-Theme-Manager","kind":"task"}],"reference":"doc:\/\/dev.alexanderweiss.swiftui_theming\/tutorials\/swiftui-theming\/01-02-EnableTheming"},{"sections":[{"reference":"doc:\/\/dev.alexanderweiss.swiftui_theming\/tutorials\/swiftui-theming\/01-03-OrganizingFonts#Add-Fonts-to-Your-Application","kind":"task"},{"reference":"doc:\/\/dev.alexanderweiss.swiftui_theming\/tutorials\/swiftui-theming\/01-03-OrganizingFonts#Accessing-Your-Custom-Fonts-in-a-Theme","kind":"task"}],"reference":"doc:\/\/dev.alexanderweiss.swiftui_theming\/tutorials\/swiftui-theming\/01-03-OrganizingFonts"}]},{"reference":"doc:\/\/dev.alexanderweiss.swiftui_theming\/tutorials\/MeetSwiftUITheming\/Advanced","projects":[{"sections":[{"reference":"doc:\/\/dev.alexanderweiss.swiftui_theming\/tutorials\/swiftui-theming\/02-01-ChangeThemesAtRuntime#Create-a-view-to-change-the-theme","kind":"task"}],"reference":"doc:\/\/dev.alexanderweiss.swiftui_theming\/tutorials\/swiftui-theming\/02-01-ChangeThemesAtRuntime"}]}]},"sections":[{"kind":"hero","title":"Create your first theme","estimatedTimeInMinutes":10,"chapter":"Essentials","content":[{"inlineContent":[{"type":"text","text":"Learn how to create and organize themes effectively in your application."}],"type":"paragraph"}]},{"tasks":[{"stepsSection":[{"type":"step","media":null,"code":"01-01-01-code-0001.swift","runtimePreview":null,"caption":[],"content":[{"inlineContent":[{"type":"text","text":"Create a new SwiftUI View file named "},{"code":"Themes.swift","type":"codeVoice"},{"text":". This file will serve as the central location for all the themes used in your app.","type":"text"}],"type":"paragraph"}]},{"media":null,"content":[{"inlineContent":[{"type":"text","text":"Each theme requires a name, a color mapping table, and optionally, a font mapping table. While the font mapping table is optional, the name and color mapping table are mandatory."}],"type":"paragraph"}],"code":"01-01-01-code-0001.swift","runtimePreview":null,"caption":[],"type":"step"},{"content":[{"inlineContent":[{"text":"To gain better control over theme creation, use dedicated methods for each theme. This approach is similar to implementing a factory method.","type":"text"}],"type":"paragraph"}],"caption":[],"code":"01-01-01-code-0002.swift","type":"step","media":null,"runtimePreview":null},{"type":"step","runtimePreview":null,"media":null,"caption":[],"content":[{"type":"paragraph","inlineContent":[{"text":"With the foundational setup complete, proceed to create color mappings. Start by creating a new file named ","type":"text"},{"code":"ThemeColors.swift","type":"codeVoice"},{"text":". This file will define all the color styles your app supports, typically derived from your appâ€™s design guidelines. Each color style is uniquely identified by a name.","type":"text"}]}],"code":"01-01-01-code-0003.swift"},{"content":[{"inlineContent":[{"type":"text","text":"Next, configure the mapping table to link color styles to their corresponding colors."}],"type":"paragraph"}],"code":"01-01-01-code-0004.swift","type":"step","caption":[],"runtimePreview":null,"media":null},{"content":[{"inlineContent":[{"type":"text","text":"If your app supports multiple platforms, you may need to create different mappings, as not all color variants are available across every platform. This also allows you to define distinct color sets tailored to each platform."}],"type":"paragraph"}],"media":null,"code":"01-01-01-code-0005.swift","caption":[],"type":"step","runtimePreview":null},{"caption":[],"code":"01-01-01-code-0006.swift","type":"step","runtimePreview":null,"media":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Finally, create a theme instance, give it a meaningful name, and assign the color mapping you have defined."}]}]}],"title":"Create a theme","contentSection":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Take the initial steps to make your app themeable.","type":"text"}]}],"kind":"contentAndMedia","mediaPosition":"trailing"}],"anchor":"Create-a-theme"}],"kind":"tasks"},{"abstract":[{"type":"text","text":"Learn how to enable theming in your SwiftUI application."}],"featuredEyebrow":"Tutorial","action":{"overridingTitle":"Get started","overridingTitleInlineContent":[{"text":"Get started","type":"text"}],"isActive":true,"identifier":"doc:\/\/dev.alexanderweiss.swiftui_theming\/tutorials\/swiftui-theming\/01-02-EnableTheming","type":"reference"},"kind":"callToAction","title":"Enable Theming"}],"references":{"01-01-01-code-0004.swift":{"fileType":"swift","content":["import Theming","","\/\/ MARK: - Available Themes","extension Theme {","    static let `default`: Theme = .createDefaultTheme()","}","","\/\/ MARK: - Theme creation","extension Theme {","    private static func createDefaultTheme() -> Theme {","        let colors: Theme.ColorMap","","        colors = [","            .primaryLabel: ThemeColor(lightColor: .primary, darkColor: .primary),","            .secondaryLabel: ThemeColor(lightColor: .gray, darkColor: .black),","            .tertiaryLabel: ThemeColor(lightColor: .primary, darkColor: .primary),","            .primaryBackground: ThemeColor(lightColor: .primary, darkColor: .primary),","            .primaryGroupedBackground: ThemeColor(lightColor: .primary, darkColor: .primary),","        ]","    }","}"],"fileName":"Themes.swift","identifier":"01-01-01-code-0004.swift","type":"file","syntax":"swift","highlights":[]},"doc://dev.alexanderweiss.swiftui_theming/tutorials/swiftui-theming/02-01-ChangeThemesAtRuntime":{"role":"project","title":"Change themes at runtime","type":"topic","identifier":"doc:\/\/dev.alexanderweiss.swiftui_theming\/tutorials\/swiftui-theming\/02-01-ChangeThemesAtRuntime","kind":"project","abstract":[{"text":"Learn how to dynamically change themes at runtime.","type":"text"}],"estimatedTime":"15min","url":"\/tutorials\/swiftui-theming\/02-01-changethemesatruntime"},"01-01-01-code-0002.swift":{"fileName":"Themes.swift","type":"file","fileType":"swift","highlights":[{"line":7},{"line":8},{"line":9},{"line":10},{"line":11}],"identifier":"01-01-01-code-0002.swift","content":["import Theming","","\/\/ MARK: - Available Themes","extension Theme {","    static let `default`: Theme = .createDefaultTheme()","}","","\/\/ MARK: - Theme creation","extension Theme {","    private static func createDefaultTheme() -> Theme {}","}"],"syntax":"swift"},"01-01-01-code-0006.swift":{"fileType":"swift","highlights":[{"line":26},{"line":27}],"content":["import Theming","","\/\/ MARK: - Available Themes","extension Theme {","    static let `default`: Theme = .createDefaultTheme()","}","","\/\/ MARK: - Theme creation","extension Theme {","    private static func createDefaultTheme() -> Theme {","        let colors: Theme.ColorMap","","        #if os(iOS) || os(visionOS)","        colors = [","            ...define iOS and visionOS color mappings,","        ]","        #elseif os(watchOS)","        colors = [","            ...define watchOS color mappings,","        ]","        #elseif os(macOS) || os(tvOS)","        colors = [","            ...define macOS and tvOS color mappings,","        ]","        #endif","","        return Theme(name: \"Default\", colors: colors)","    }","}"],"fileName":"Themes.swift","type":"file","syntax":"swift","identifier":"01-01-01-code-0006.swift"},"doc://dev.alexanderweiss.swiftui_theming/tutorials/swiftui-theming/01-03-OrganizingFonts#Add-Fonts-to-Your-Application":{"identifier":"doc:\/\/dev.alexanderweiss.swiftui_theming\/tutorials\/swiftui-theming\/01-03-OrganizingFonts#Add-Fonts-to-Your-Application","abstract":[{"type":"text","text":"Learn how to organize fonts for use in a theme."}],"url":"\/tutorials\/swiftui-theming\/01-03-organizingfonts#Add-Fonts-to-Your-Application","title":"Add Fonts to Your Application","kind":"section","role":"pseudoSymbol","type":"section"},"doc://dev.alexanderweiss.swiftui_theming/tutorials/swiftui-theming/01-03-OrganizingFonts#Accessing-Your-Custom-Fonts-in-a-Theme":{"identifier":"doc:\/\/dev.alexanderweiss.swiftui_theming\/tutorials\/swiftui-theming\/01-03-OrganizingFonts#Accessing-Your-Custom-Fonts-in-a-Theme","role":"pseudoSymbol","title":"Accessing Your Custom Fonts in a Theme","kind":"section","url":"\/tutorials\/swiftui-theming\/01-03-organizingfonts#Accessing-Your-Custom-Fonts-in-a-Theme","abstract":[{"type":"text","text":"Learn how to organize fonts for use in a theme."}],"type":"section"},"doc://dev.alexanderweiss.swiftui_theming/tutorials/swiftui-theming/01-03-OrganizingFonts":{"identifier":"doc:\/\/dev.alexanderweiss.swiftui_theming\/tutorials\/swiftui-theming\/01-03-OrganizingFonts","role":"project","estimatedTime":"15min","title":"Organize Fonts","kind":"project","url":"\/tutorials\/swiftui-theming\/01-03-organizingfonts","abstract":[{"type":"text","text":"Learn how to organize fonts for use in a theme."}],"type":"topic"},"01-01-01-code-0005.swift":{"fileName":"Themes.swift","type":"file","fileType":"swift","highlights":[{"line":13},{"line":15},{"line":17},{"line":18},{"line":19},{"line":20},{"line":21},{"line":22},{"line":23},{"line":24},{"line":25}],"identifier":"01-01-01-code-0005.swift","content":["import Theming","","\/\/ MARK: - Available Themes","extension Theme {","    static let `default`: Theme = .createDefaultTheme()","}","","\/\/ MARK: - Theme creation","extension Theme {","    private static func createDefaultTheme() -> Theme {","        let colors: Theme.ColorMap","","        #if os(iOS) || os(visionOS)","        colors = [","            ...define iOS and visionOS color mappings,","        ]","        #elseif os(watchOS)","        colors = [","            ...define watchOS color mappings,","        ]","        #elseif os(macOS) || os(tvOS)","        colors = [","            ...define macOS and tvOS color mappings,","        ]","        #endif","    }","}"],"syntax":"swift"},"01-01-01-code-0001.swift":{"fileType":"swift","highlights":[],"content":["import Theming","","\/\/ MARK: - Available Themes","extension Theme {","    static let `default`: Theme = .createDefaultTheme()","}"],"fileName":"Themes.swift","type":"file","syntax":"swift","identifier":"01-01-01-code-0001.swift"},"doc://dev.alexanderweiss.swiftui_theming/tutorials/swiftui-theming/01-01-CreatingThemes#Create-a-theme":{"identifier":"doc:\/\/dev.alexanderweiss.swiftui_theming\/tutorials\/swiftui-theming\/01-01-CreatingThemes#Create-a-theme","abstract":[{"type":"text","text":"Learn how to create and organize themes effectively in your application."}],"url":"\/tutorials\/swiftui-theming\/01-01-creatingthemes#Create-a-theme","title":"Create a theme","kind":"section","role":"pseudoSymbol","type":"section"},"doc://dev.alexanderweiss.swiftui_theming/tutorials/swiftui-theming/01-02-EnableTheming#Add-the-Theme-Manager":{"title":"Add the Theme Manager","kind":"section","url":"\/tutorials\/swiftui-theming\/01-02-enabletheming#Add-the-Theme-Manager","identifier":"doc:\/\/dev.alexanderweiss.swiftui_theming\/tutorials\/swiftui-theming\/01-02-EnableTheming#Add-the-Theme-Manager","role":"pseudoSymbol","type":"section","abstract":[{"type":"text","text":"Learn how to enable theming in your SwiftUI application."}]},"01-01-01-code-0003.swift":{"fileName":"ThemesColors.swift","type":"file","fileType":"swift","highlights":[],"identifier":"01-01-01-code-0003.swift","content":["import Theming","","extension ThemeColorStyle {","    \/\/\/ The color for a primary label.","    static let primaryLabel: Self = Self(name: \"primaryLabel\")","","    \/\/\/ The color for a secondary label.","    static let secondaryLabel: Self = Self(name: \"secondaryLabel\")","","    \/\/\/ The color for a tertiary label.","    static let tertiaryLabel: Self = Self(name: \"tertiaryLabel\")","","    \/\/\/ The color for a primary background.","    static let primaryBackground: Self = Self(name: \"primaryBackground\")","","    \/\/\/ The color for a primary background used in a grouped list.","    static let primaryGroupedBackground: Self = Self(name: \"primaryGroupedBackground\")","}"],"syntax":"swift"},"doc://dev.alexanderweiss.swiftui_theming/tutorials/MeetSwiftUITheming":{"abstract":[{"type":"text","text":"SwiftUI Theming is a library that enables seamless theming in SwiftUI across all Apple platforms, including iOS, macOS, tvOS, watchOS, and visionOS."}],"identifier":"doc:\/\/dev.alexanderweiss.swiftui_theming\/tutorials\/MeetSwiftUITheming","kind":"overview","type":"topic","title":"Meet SwiftUI Theming","url":"\/tutorials\/meetswiftuitheming","role":"overview"},"doc://dev.alexanderweiss.swiftui_theming/tutorials/swiftui-theming/01-01-CreatingThemes":{"estimatedTime":"10min","title":"Create your first theme","kind":"project","url":"\/tutorials\/swiftui-theming\/01-01-creatingthemes","identifier":"doc:\/\/dev.alexanderweiss.swiftui_theming\/tutorials\/swiftui-theming\/01-01-CreatingThemes","role":"project","type":"topic","abstract":[{"type":"text","text":"Learn how to create and organize themes effectively in your application."}]},"doc://dev.alexanderweiss.swiftui_theming/tutorials/MeetSwiftUITheming/Essentials":{"type":"topic","url":"\/tutorials\/meetswiftuitheming\/essentials","identifier":"doc:\/\/dev.alexanderweiss.swiftui_theming\/tutorials\/MeetSwiftUITheming\/Essentials","role":"article","title":"Essentials","kind":"article","abstract":[]},"doc://dev.alexanderweiss.swiftui_theming/tutorials/MeetSwiftUITheming/Advanced":{"title":"Advanced","kind":"article","url":"\/tutorials\/meetswiftuitheming\/advanced","identifier":"doc:\/\/dev.alexanderweiss.swiftui_theming\/tutorials\/MeetSwiftUITheming\/Advanced","role":"article","type":"topic","abstract":[]},"doc://dev.alexanderweiss.swiftui_theming/tutorials/swiftui-theming/01-02-EnableTheming":{"url":"\/tutorials\/swiftui-theming\/01-02-enabletheming","kind":"project","title":"Enable Theming","identifier":"doc:\/\/dev.alexanderweiss.swiftui_theming\/tutorials\/swiftui-theming\/01-02-EnableTheming","abstract":[{"type":"text","text":"Learn how to enable theming in your SwiftUI application."}],"estimatedTime":"5min","type":"topic","role":"project"},"doc://dev.alexanderweiss.swiftui_theming/tutorials/swiftui-theming/02-01-ChangeThemesAtRuntime#Create-a-view-to-change-the-theme":{"abstract":[{"text":"Learn how to dynamically change themes at runtime.","type":"text"}],"identifier":"doc:\/\/dev.alexanderweiss.swiftui_theming\/tutorials\/swiftui-theming\/02-01-ChangeThemesAtRuntime#Create-a-view-to-change-the-theme","kind":"section","type":"section","title":"Create a view to change the theme","url":"\/tutorials\/swiftui-theming\/02-01-changethemesatruntime#Create-a-view-to-change-the-theme","role":"pseudoSymbol"}}}